apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: {{ $.Values.baseName }}
    app.kubernetes.io/component: opentelemetry-collector
    service: buildbarn
    team: {{ $.Values.team }}
  name: {{ $.Values.baseName }}-opentelemetry-collector
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: {{ $.Values.otelcol.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $.Values.baseName }}
      app.kubernetes.io/component: opentelemetry-collector
  template:
    metadata:
      annotations:
        checksum/common.config: {{ include (print $.Template.BasePath "/config/collector.yaml.tpl") . | sha256sum }}
        ad.datadoghq.com/otelcol.check_names: |
          ["openmetrics"]
        ad.datadoghq.com/otelcol.init_configs: |
          [{}]
        ad.datadoghq.com/otelcol.instances: |
          [
            {
              "prometheus_url": "http://%%host%%:%%port_http%%/metrics",
              "namespace": "buildbarn.otelcol",
              "metrics": ["*"]
            }
          ]
      labels:
        app.kubernetes.io/component: opentelemetry-collector
    spec:
      serviceAccountName: {{ $.Values.baseName }}-opentelemetry-collector
      containers:
      - image: {{ $.Values.otelcol.image.name }}:{{ $.Values.otelcol.image.tag }}
        ports:
        - containerPort: {{ .Values.otelcol.port }}
          protocol: TCP
        - containerPort: {{ .Values.otelcol.prometheusPort }}
          protocol: TCP
        imagePullPolicy: IfNotPresent
        name: otelcol
        resources:
          {{ $.Values.otelcol.resources | toYaml | nindent 12 }}
        volumeMounts:
          - name: config
            mountPath: /etc/otel
      volumes:
        - name: config
          configMap:
            name: {{ $.Values.baseName }}-opentelemetry-collector
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $.Values.baseName }}-opentelemetry-collector
  namespace: {{ $.Release.Namespace }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: {{ $.Values.baseName }}-opentelemetry-collector
    service: buildbarn
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.baseName }}-opentelemetry-collector
  namespace: {{ $.Release.Namespace }}
spec:
  ports:
  - port: {{ $.Values.otelcol.port }}
    protocol: TCP
  selector:
    app.kubernetes.io/component: opentelemetry-collector
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Values.baseName }}-opentelemetry-collector-headless
  namespace: {{ $.Values.namespace }}
  labels:
    app.kubernetes.io/component: opentelemetry-collector
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: grpc
    port: {{ .Values.otelcol.port }}
    protocol: TCP
  - name: http
    port: {{ .Values.otelcol.prometheusPort }}
    protocol: TCP
  selector:
    app.kubernetes.io/name: {{ $.Values.baseName }}
    app.kubernetes.io/component: opentelemetry-collector
